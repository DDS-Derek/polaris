// Code generated by ent, DO NOT EDIT.

package indexers

import (
	"polaris/ent/predicate"
	"time"

	"entgo.io/ent/dialect/sql"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.Indexers {
	return predicate.Indexers(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.Indexers {
	return predicate.Indexers(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.Indexers {
	return predicate.Indexers(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.Indexers {
	return predicate.Indexers(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.Indexers {
	return predicate.Indexers(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.Indexers {
	return predicate.Indexers(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.Indexers {
	return predicate.Indexers(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.Indexers {
	return predicate.Indexers(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.Indexers {
	return predicate.Indexers(sql.FieldLTE(FieldID, id))
}

// Name applies equality check predicate on the "name" field. It's identical to NameEQ.
func Name(v string) predicate.Indexers {
	return predicate.Indexers(sql.FieldEQ(FieldName, v))
}

// Implementation applies equality check predicate on the "implementation" field. It's identical to ImplementationEQ.
func Implementation(v string) predicate.Indexers {
	return predicate.Indexers(sql.FieldEQ(FieldImplementation, v))
}

// Settings applies equality check predicate on the "settings" field. It's identical to SettingsEQ.
func Settings(v string) predicate.Indexers {
	return predicate.Indexers(sql.FieldEQ(FieldSettings, v))
}

// EnableRss applies equality check predicate on the "enable_rss" field. It's identical to EnableRssEQ.
func EnableRss(v bool) predicate.Indexers {
	return predicate.Indexers(sql.FieldEQ(FieldEnableRss, v))
}

// Priority applies equality check predicate on the "priority" field. It's identical to PriorityEQ.
func Priority(v int) predicate.Indexers {
	return predicate.Indexers(sql.FieldEQ(FieldPriority, v))
}

// SeedRatio applies equality check predicate on the "seed_ratio" field. It's identical to SeedRatioEQ.
func SeedRatio(v float32) predicate.Indexers {
	return predicate.Indexers(sql.FieldEQ(FieldSeedRatio, v))
}

// Disabled applies equality check predicate on the "disabled" field. It's identical to DisabledEQ.
func Disabled(v bool) predicate.Indexers {
	return predicate.Indexers(sql.FieldEQ(FieldDisabled, v))
}

// TvSearch applies equality check predicate on the "tv_search" field. It's identical to TvSearchEQ.
func TvSearch(v bool) predicate.Indexers {
	return predicate.Indexers(sql.FieldEQ(FieldTvSearch, v))
}

// MovieSearch applies equality check predicate on the "movie_search" field. It's identical to MovieSearchEQ.
func MovieSearch(v bool) predicate.Indexers {
	return predicate.Indexers(sql.FieldEQ(FieldMovieSearch, v))
}

// APIKey applies equality check predicate on the "api_key" field. It's identical to APIKeyEQ.
func APIKey(v string) predicate.Indexers {
	return predicate.Indexers(sql.FieldEQ(FieldAPIKey, v))
}

// URL applies equality check predicate on the "url" field. It's identical to URLEQ.
func URL(v string) predicate.Indexers {
	return predicate.Indexers(sql.FieldEQ(FieldURL, v))
}

// Synced applies equality check predicate on the "synced" field. It's identical to SyncedEQ.
func Synced(v bool) predicate.Indexers {
	return predicate.Indexers(sql.FieldEQ(FieldSynced, v))
}

// CreateTime applies equality check predicate on the "create_time" field. It's identical to CreateTimeEQ.
func CreateTime(v time.Time) predicate.Indexers {
	return predicate.Indexers(sql.FieldEQ(FieldCreateTime, v))
}

// NameEQ applies the EQ predicate on the "name" field.
func NameEQ(v string) predicate.Indexers {
	return predicate.Indexers(sql.FieldEQ(FieldName, v))
}

// NameNEQ applies the NEQ predicate on the "name" field.
func NameNEQ(v string) predicate.Indexers {
	return predicate.Indexers(sql.FieldNEQ(FieldName, v))
}

// NameIn applies the In predicate on the "name" field.
func NameIn(vs ...string) predicate.Indexers {
	return predicate.Indexers(sql.FieldIn(FieldName, vs...))
}

// NameNotIn applies the NotIn predicate on the "name" field.
func NameNotIn(vs ...string) predicate.Indexers {
	return predicate.Indexers(sql.FieldNotIn(FieldName, vs...))
}

// NameGT applies the GT predicate on the "name" field.
func NameGT(v string) predicate.Indexers {
	return predicate.Indexers(sql.FieldGT(FieldName, v))
}

// NameGTE applies the GTE predicate on the "name" field.
func NameGTE(v string) predicate.Indexers {
	return predicate.Indexers(sql.FieldGTE(FieldName, v))
}

// NameLT applies the LT predicate on the "name" field.
func NameLT(v string) predicate.Indexers {
	return predicate.Indexers(sql.FieldLT(FieldName, v))
}

// NameLTE applies the LTE predicate on the "name" field.
func NameLTE(v string) predicate.Indexers {
	return predicate.Indexers(sql.FieldLTE(FieldName, v))
}

// NameContains applies the Contains predicate on the "name" field.
func NameContains(v string) predicate.Indexers {
	return predicate.Indexers(sql.FieldContains(FieldName, v))
}

// NameHasPrefix applies the HasPrefix predicate on the "name" field.
func NameHasPrefix(v string) predicate.Indexers {
	return predicate.Indexers(sql.FieldHasPrefix(FieldName, v))
}

// NameHasSuffix applies the HasSuffix predicate on the "name" field.
func NameHasSuffix(v string) predicate.Indexers {
	return predicate.Indexers(sql.FieldHasSuffix(FieldName, v))
}

// NameEqualFold applies the EqualFold predicate on the "name" field.
func NameEqualFold(v string) predicate.Indexers {
	return predicate.Indexers(sql.FieldEqualFold(FieldName, v))
}

// NameContainsFold applies the ContainsFold predicate on the "name" field.
func NameContainsFold(v string) predicate.Indexers {
	return predicate.Indexers(sql.FieldContainsFold(FieldName, v))
}

// ImplementationEQ applies the EQ predicate on the "implementation" field.
func ImplementationEQ(v string) predicate.Indexers {
	return predicate.Indexers(sql.FieldEQ(FieldImplementation, v))
}

// ImplementationNEQ applies the NEQ predicate on the "implementation" field.
func ImplementationNEQ(v string) predicate.Indexers {
	return predicate.Indexers(sql.FieldNEQ(FieldImplementation, v))
}

// ImplementationIn applies the In predicate on the "implementation" field.
func ImplementationIn(vs ...string) predicate.Indexers {
	return predicate.Indexers(sql.FieldIn(FieldImplementation, vs...))
}

// ImplementationNotIn applies the NotIn predicate on the "implementation" field.
func ImplementationNotIn(vs ...string) predicate.Indexers {
	return predicate.Indexers(sql.FieldNotIn(FieldImplementation, vs...))
}

// ImplementationGT applies the GT predicate on the "implementation" field.
func ImplementationGT(v string) predicate.Indexers {
	return predicate.Indexers(sql.FieldGT(FieldImplementation, v))
}

// ImplementationGTE applies the GTE predicate on the "implementation" field.
func ImplementationGTE(v string) predicate.Indexers {
	return predicate.Indexers(sql.FieldGTE(FieldImplementation, v))
}

// ImplementationLT applies the LT predicate on the "implementation" field.
func ImplementationLT(v string) predicate.Indexers {
	return predicate.Indexers(sql.FieldLT(FieldImplementation, v))
}

// ImplementationLTE applies the LTE predicate on the "implementation" field.
func ImplementationLTE(v string) predicate.Indexers {
	return predicate.Indexers(sql.FieldLTE(FieldImplementation, v))
}

// ImplementationContains applies the Contains predicate on the "implementation" field.
func ImplementationContains(v string) predicate.Indexers {
	return predicate.Indexers(sql.FieldContains(FieldImplementation, v))
}

// ImplementationHasPrefix applies the HasPrefix predicate on the "implementation" field.
func ImplementationHasPrefix(v string) predicate.Indexers {
	return predicate.Indexers(sql.FieldHasPrefix(FieldImplementation, v))
}

// ImplementationHasSuffix applies the HasSuffix predicate on the "implementation" field.
func ImplementationHasSuffix(v string) predicate.Indexers {
	return predicate.Indexers(sql.FieldHasSuffix(FieldImplementation, v))
}

// ImplementationEqualFold applies the EqualFold predicate on the "implementation" field.
func ImplementationEqualFold(v string) predicate.Indexers {
	return predicate.Indexers(sql.FieldEqualFold(FieldImplementation, v))
}

// ImplementationContainsFold applies the ContainsFold predicate on the "implementation" field.
func ImplementationContainsFold(v string) predicate.Indexers {
	return predicate.Indexers(sql.FieldContainsFold(FieldImplementation, v))
}

// SettingsEQ applies the EQ predicate on the "settings" field.
func SettingsEQ(v string) predicate.Indexers {
	return predicate.Indexers(sql.FieldEQ(FieldSettings, v))
}

// SettingsNEQ applies the NEQ predicate on the "settings" field.
func SettingsNEQ(v string) predicate.Indexers {
	return predicate.Indexers(sql.FieldNEQ(FieldSettings, v))
}

// SettingsIn applies the In predicate on the "settings" field.
func SettingsIn(vs ...string) predicate.Indexers {
	return predicate.Indexers(sql.FieldIn(FieldSettings, vs...))
}

// SettingsNotIn applies the NotIn predicate on the "settings" field.
func SettingsNotIn(vs ...string) predicate.Indexers {
	return predicate.Indexers(sql.FieldNotIn(FieldSettings, vs...))
}

// SettingsGT applies the GT predicate on the "settings" field.
func SettingsGT(v string) predicate.Indexers {
	return predicate.Indexers(sql.FieldGT(FieldSettings, v))
}

// SettingsGTE applies the GTE predicate on the "settings" field.
func SettingsGTE(v string) predicate.Indexers {
	return predicate.Indexers(sql.FieldGTE(FieldSettings, v))
}

// SettingsLT applies the LT predicate on the "settings" field.
func SettingsLT(v string) predicate.Indexers {
	return predicate.Indexers(sql.FieldLT(FieldSettings, v))
}

// SettingsLTE applies the LTE predicate on the "settings" field.
func SettingsLTE(v string) predicate.Indexers {
	return predicate.Indexers(sql.FieldLTE(FieldSettings, v))
}

// SettingsContains applies the Contains predicate on the "settings" field.
func SettingsContains(v string) predicate.Indexers {
	return predicate.Indexers(sql.FieldContains(FieldSettings, v))
}

// SettingsHasPrefix applies the HasPrefix predicate on the "settings" field.
func SettingsHasPrefix(v string) predicate.Indexers {
	return predicate.Indexers(sql.FieldHasPrefix(FieldSettings, v))
}

// SettingsHasSuffix applies the HasSuffix predicate on the "settings" field.
func SettingsHasSuffix(v string) predicate.Indexers {
	return predicate.Indexers(sql.FieldHasSuffix(FieldSettings, v))
}

// SettingsIsNil applies the IsNil predicate on the "settings" field.
func SettingsIsNil() predicate.Indexers {
	return predicate.Indexers(sql.FieldIsNull(FieldSettings))
}

// SettingsNotNil applies the NotNil predicate on the "settings" field.
func SettingsNotNil() predicate.Indexers {
	return predicate.Indexers(sql.FieldNotNull(FieldSettings))
}

// SettingsEqualFold applies the EqualFold predicate on the "settings" field.
func SettingsEqualFold(v string) predicate.Indexers {
	return predicate.Indexers(sql.FieldEqualFold(FieldSettings, v))
}

// SettingsContainsFold applies the ContainsFold predicate on the "settings" field.
func SettingsContainsFold(v string) predicate.Indexers {
	return predicate.Indexers(sql.FieldContainsFold(FieldSettings, v))
}

// EnableRssEQ applies the EQ predicate on the "enable_rss" field.
func EnableRssEQ(v bool) predicate.Indexers {
	return predicate.Indexers(sql.FieldEQ(FieldEnableRss, v))
}

// EnableRssNEQ applies the NEQ predicate on the "enable_rss" field.
func EnableRssNEQ(v bool) predicate.Indexers {
	return predicate.Indexers(sql.FieldNEQ(FieldEnableRss, v))
}

// PriorityEQ applies the EQ predicate on the "priority" field.
func PriorityEQ(v int) predicate.Indexers {
	return predicate.Indexers(sql.FieldEQ(FieldPriority, v))
}

// PriorityNEQ applies the NEQ predicate on the "priority" field.
func PriorityNEQ(v int) predicate.Indexers {
	return predicate.Indexers(sql.FieldNEQ(FieldPriority, v))
}

// PriorityIn applies the In predicate on the "priority" field.
func PriorityIn(vs ...int) predicate.Indexers {
	return predicate.Indexers(sql.FieldIn(FieldPriority, vs...))
}

// PriorityNotIn applies the NotIn predicate on the "priority" field.
func PriorityNotIn(vs ...int) predicate.Indexers {
	return predicate.Indexers(sql.FieldNotIn(FieldPriority, vs...))
}

// PriorityGT applies the GT predicate on the "priority" field.
func PriorityGT(v int) predicate.Indexers {
	return predicate.Indexers(sql.FieldGT(FieldPriority, v))
}

// PriorityGTE applies the GTE predicate on the "priority" field.
func PriorityGTE(v int) predicate.Indexers {
	return predicate.Indexers(sql.FieldGTE(FieldPriority, v))
}

// PriorityLT applies the LT predicate on the "priority" field.
func PriorityLT(v int) predicate.Indexers {
	return predicate.Indexers(sql.FieldLT(FieldPriority, v))
}

// PriorityLTE applies the LTE predicate on the "priority" field.
func PriorityLTE(v int) predicate.Indexers {
	return predicate.Indexers(sql.FieldLTE(FieldPriority, v))
}

// SeedRatioEQ applies the EQ predicate on the "seed_ratio" field.
func SeedRatioEQ(v float32) predicate.Indexers {
	return predicate.Indexers(sql.FieldEQ(FieldSeedRatio, v))
}

// SeedRatioNEQ applies the NEQ predicate on the "seed_ratio" field.
func SeedRatioNEQ(v float32) predicate.Indexers {
	return predicate.Indexers(sql.FieldNEQ(FieldSeedRatio, v))
}

// SeedRatioIn applies the In predicate on the "seed_ratio" field.
func SeedRatioIn(vs ...float32) predicate.Indexers {
	return predicate.Indexers(sql.FieldIn(FieldSeedRatio, vs...))
}

// SeedRatioNotIn applies the NotIn predicate on the "seed_ratio" field.
func SeedRatioNotIn(vs ...float32) predicate.Indexers {
	return predicate.Indexers(sql.FieldNotIn(FieldSeedRatio, vs...))
}

// SeedRatioGT applies the GT predicate on the "seed_ratio" field.
func SeedRatioGT(v float32) predicate.Indexers {
	return predicate.Indexers(sql.FieldGT(FieldSeedRatio, v))
}

// SeedRatioGTE applies the GTE predicate on the "seed_ratio" field.
func SeedRatioGTE(v float32) predicate.Indexers {
	return predicate.Indexers(sql.FieldGTE(FieldSeedRatio, v))
}

// SeedRatioLT applies the LT predicate on the "seed_ratio" field.
func SeedRatioLT(v float32) predicate.Indexers {
	return predicate.Indexers(sql.FieldLT(FieldSeedRatio, v))
}

// SeedRatioLTE applies the LTE predicate on the "seed_ratio" field.
func SeedRatioLTE(v float32) predicate.Indexers {
	return predicate.Indexers(sql.FieldLTE(FieldSeedRatio, v))
}

// SeedRatioIsNil applies the IsNil predicate on the "seed_ratio" field.
func SeedRatioIsNil() predicate.Indexers {
	return predicate.Indexers(sql.FieldIsNull(FieldSeedRatio))
}

// SeedRatioNotNil applies the NotNil predicate on the "seed_ratio" field.
func SeedRatioNotNil() predicate.Indexers {
	return predicate.Indexers(sql.FieldNotNull(FieldSeedRatio))
}

// DisabledEQ applies the EQ predicate on the "disabled" field.
func DisabledEQ(v bool) predicate.Indexers {
	return predicate.Indexers(sql.FieldEQ(FieldDisabled, v))
}

// DisabledNEQ applies the NEQ predicate on the "disabled" field.
func DisabledNEQ(v bool) predicate.Indexers {
	return predicate.Indexers(sql.FieldNEQ(FieldDisabled, v))
}

// DisabledIsNil applies the IsNil predicate on the "disabled" field.
func DisabledIsNil() predicate.Indexers {
	return predicate.Indexers(sql.FieldIsNull(FieldDisabled))
}

// DisabledNotNil applies the NotNil predicate on the "disabled" field.
func DisabledNotNil() predicate.Indexers {
	return predicate.Indexers(sql.FieldNotNull(FieldDisabled))
}

// TvSearchEQ applies the EQ predicate on the "tv_search" field.
func TvSearchEQ(v bool) predicate.Indexers {
	return predicate.Indexers(sql.FieldEQ(FieldTvSearch, v))
}

// TvSearchNEQ applies the NEQ predicate on the "tv_search" field.
func TvSearchNEQ(v bool) predicate.Indexers {
	return predicate.Indexers(sql.FieldNEQ(FieldTvSearch, v))
}

// TvSearchIsNil applies the IsNil predicate on the "tv_search" field.
func TvSearchIsNil() predicate.Indexers {
	return predicate.Indexers(sql.FieldIsNull(FieldTvSearch))
}

// TvSearchNotNil applies the NotNil predicate on the "tv_search" field.
func TvSearchNotNil() predicate.Indexers {
	return predicate.Indexers(sql.FieldNotNull(FieldTvSearch))
}

// MovieSearchEQ applies the EQ predicate on the "movie_search" field.
func MovieSearchEQ(v bool) predicate.Indexers {
	return predicate.Indexers(sql.FieldEQ(FieldMovieSearch, v))
}

// MovieSearchNEQ applies the NEQ predicate on the "movie_search" field.
func MovieSearchNEQ(v bool) predicate.Indexers {
	return predicate.Indexers(sql.FieldNEQ(FieldMovieSearch, v))
}

// MovieSearchIsNil applies the IsNil predicate on the "movie_search" field.
func MovieSearchIsNil() predicate.Indexers {
	return predicate.Indexers(sql.FieldIsNull(FieldMovieSearch))
}

// MovieSearchNotNil applies the NotNil predicate on the "movie_search" field.
func MovieSearchNotNil() predicate.Indexers {
	return predicate.Indexers(sql.FieldNotNull(FieldMovieSearch))
}

// APIKeyEQ applies the EQ predicate on the "api_key" field.
func APIKeyEQ(v string) predicate.Indexers {
	return predicate.Indexers(sql.FieldEQ(FieldAPIKey, v))
}

// APIKeyNEQ applies the NEQ predicate on the "api_key" field.
func APIKeyNEQ(v string) predicate.Indexers {
	return predicate.Indexers(sql.FieldNEQ(FieldAPIKey, v))
}

// APIKeyIn applies the In predicate on the "api_key" field.
func APIKeyIn(vs ...string) predicate.Indexers {
	return predicate.Indexers(sql.FieldIn(FieldAPIKey, vs...))
}

// APIKeyNotIn applies the NotIn predicate on the "api_key" field.
func APIKeyNotIn(vs ...string) predicate.Indexers {
	return predicate.Indexers(sql.FieldNotIn(FieldAPIKey, vs...))
}

// APIKeyGT applies the GT predicate on the "api_key" field.
func APIKeyGT(v string) predicate.Indexers {
	return predicate.Indexers(sql.FieldGT(FieldAPIKey, v))
}

// APIKeyGTE applies the GTE predicate on the "api_key" field.
func APIKeyGTE(v string) predicate.Indexers {
	return predicate.Indexers(sql.FieldGTE(FieldAPIKey, v))
}

// APIKeyLT applies the LT predicate on the "api_key" field.
func APIKeyLT(v string) predicate.Indexers {
	return predicate.Indexers(sql.FieldLT(FieldAPIKey, v))
}

// APIKeyLTE applies the LTE predicate on the "api_key" field.
func APIKeyLTE(v string) predicate.Indexers {
	return predicate.Indexers(sql.FieldLTE(FieldAPIKey, v))
}

// APIKeyContains applies the Contains predicate on the "api_key" field.
func APIKeyContains(v string) predicate.Indexers {
	return predicate.Indexers(sql.FieldContains(FieldAPIKey, v))
}

// APIKeyHasPrefix applies the HasPrefix predicate on the "api_key" field.
func APIKeyHasPrefix(v string) predicate.Indexers {
	return predicate.Indexers(sql.FieldHasPrefix(FieldAPIKey, v))
}

// APIKeyHasSuffix applies the HasSuffix predicate on the "api_key" field.
func APIKeyHasSuffix(v string) predicate.Indexers {
	return predicate.Indexers(sql.FieldHasSuffix(FieldAPIKey, v))
}

// APIKeyIsNil applies the IsNil predicate on the "api_key" field.
func APIKeyIsNil() predicate.Indexers {
	return predicate.Indexers(sql.FieldIsNull(FieldAPIKey))
}

// APIKeyNotNil applies the NotNil predicate on the "api_key" field.
func APIKeyNotNil() predicate.Indexers {
	return predicate.Indexers(sql.FieldNotNull(FieldAPIKey))
}

// APIKeyEqualFold applies the EqualFold predicate on the "api_key" field.
func APIKeyEqualFold(v string) predicate.Indexers {
	return predicate.Indexers(sql.FieldEqualFold(FieldAPIKey, v))
}

// APIKeyContainsFold applies the ContainsFold predicate on the "api_key" field.
func APIKeyContainsFold(v string) predicate.Indexers {
	return predicate.Indexers(sql.FieldContainsFold(FieldAPIKey, v))
}

// URLEQ applies the EQ predicate on the "url" field.
func URLEQ(v string) predicate.Indexers {
	return predicate.Indexers(sql.FieldEQ(FieldURL, v))
}

// URLNEQ applies the NEQ predicate on the "url" field.
func URLNEQ(v string) predicate.Indexers {
	return predicate.Indexers(sql.FieldNEQ(FieldURL, v))
}

// URLIn applies the In predicate on the "url" field.
func URLIn(vs ...string) predicate.Indexers {
	return predicate.Indexers(sql.FieldIn(FieldURL, vs...))
}

// URLNotIn applies the NotIn predicate on the "url" field.
func URLNotIn(vs ...string) predicate.Indexers {
	return predicate.Indexers(sql.FieldNotIn(FieldURL, vs...))
}

// URLGT applies the GT predicate on the "url" field.
func URLGT(v string) predicate.Indexers {
	return predicate.Indexers(sql.FieldGT(FieldURL, v))
}

// URLGTE applies the GTE predicate on the "url" field.
func URLGTE(v string) predicate.Indexers {
	return predicate.Indexers(sql.FieldGTE(FieldURL, v))
}

// URLLT applies the LT predicate on the "url" field.
func URLLT(v string) predicate.Indexers {
	return predicate.Indexers(sql.FieldLT(FieldURL, v))
}

// URLLTE applies the LTE predicate on the "url" field.
func URLLTE(v string) predicate.Indexers {
	return predicate.Indexers(sql.FieldLTE(FieldURL, v))
}

// URLContains applies the Contains predicate on the "url" field.
func URLContains(v string) predicate.Indexers {
	return predicate.Indexers(sql.FieldContains(FieldURL, v))
}

// URLHasPrefix applies the HasPrefix predicate on the "url" field.
func URLHasPrefix(v string) predicate.Indexers {
	return predicate.Indexers(sql.FieldHasPrefix(FieldURL, v))
}

// URLHasSuffix applies the HasSuffix predicate on the "url" field.
func URLHasSuffix(v string) predicate.Indexers {
	return predicate.Indexers(sql.FieldHasSuffix(FieldURL, v))
}

// URLIsNil applies the IsNil predicate on the "url" field.
func URLIsNil() predicate.Indexers {
	return predicate.Indexers(sql.FieldIsNull(FieldURL))
}

// URLNotNil applies the NotNil predicate on the "url" field.
func URLNotNil() predicate.Indexers {
	return predicate.Indexers(sql.FieldNotNull(FieldURL))
}

// URLEqualFold applies the EqualFold predicate on the "url" field.
func URLEqualFold(v string) predicate.Indexers {
	return predicate.Indexers(sql.FieldEqualFold(FieldURL, v))
}

// URLContainsFold applies the ContainsFold predicate on the "url" field.
func URLContainsFold(v string) predicate.Indexers {
	return predicate.Indexers(sql.FieldContainsFold(FieldURL, v))
}

// SyncedEQ applies the EQ predicate on the "synced" field.
func SyncedEQ(v bool) predicate.Indexers {
	return predicate.Indexers(sql.FieldEQ(FieldSynced, v))
}

// SyncedNEQ applies the NEQ predicate on the "synced" field.
func SyncedNEQ(v bool) predicate.Indexers {
	return predicate.Indexers(sql.FieldNEQ(FieldSynced, v))
}

// SyncedIsNil applies the IsNil predicate on the "synced" field.
func SyncedIsNil() predicate.Indexers {
	return predicate.Indexers(sql.FieldIsNull(FieldSynced))
}

// SyncedNotNil applies the NotNil predicate on the "synced" field.
func SyncedNotNil() predicate.Indexers {
	return predicate.Indexers(sql.FieldNotNull(FieldSynced))
}

// CreateTimeEQ applies the EQ predicate on the "create_time" field.
func CreateTimeEQ(v time.Time) predicate.Indexers {
	return predicate.Indexers(sql.FieldEQ(FieldCreateTime, v))
}

// CreateTimeNEQ applies the NEQ predicate on the "create_time" field.
func CreateTimeNEQ(v time.Time) predicate.Indexers {
	return predicate.Indexers(sql.FieldNEQ(FieldCreateTime, v))
}

// CreateTimeIn applies the In predicate on the "create_time" field.
func CreateTimeIn(vs ...time.Time) predicate.Indexers {
	return predicate.Indexers(sql.FieldIn(FieldCreateTime, vs...))
}

// CreateTimeNotIn applies the NotIn predicate on the "create_time" field.
func CreateTimeNotIn(vs ...time.Time) predicate.Indexers {
	return predicate.Indexers(sql.FieldNotIn(FieldCreateTime, vs...))
}

// CreateTimeGT applies the GT predicate on the "create_time" field.
func CreateTimeGT(v time.Time) predicate.Indexers {
	return predicate.Indexers(sql.FieldGT(FieldCreateTime, v))
}

// CreateTimeGTE applies the GTE predicate on the "create_time" field.
func CreateTimeGTE(v time.Time) predicate.Indexers {
	return predicate.Indexers(sql.FieldGTE(FieldCreateTime, v))
}

// CreateTimeLT applies the LT predicate on the "create_time" field.
func CreateTimeLT(v time.Time) predicate.Indexers {
	return predicate.Indexers(sql.FieldLT(FieldCreateTime, v))
}

// CreateTimeLTE applies the LTE predicate on the "create_time" field.
func CreateTimeLTE(v time.Time) predicate.Indexers {
	return predicate.Indexers(sql.FieldLTE(FieldCreateTime, v))
}

// CreateTimeIsNil applies the IsNil predicate on the "create_time" field.
func CreateTimeIsNil() predicate.Indexers {
	return predicate.Indexers(sql.FieldIsNull(FieldCreateTime))
}

// CreateTimeNotNil applies the NotNil predicate on the "create_time" field.
func CreateTimeNotNil() predicate.Indexers {
	return predicate.Indexers(sql.FieldNotNull(FieldCreateTime))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.Indexers) predicate.Indexers {
	return predicate.Indexers(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.Indexers) predicate.Indexers {
	return predicate.Indexers(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.Indexers) predicate.Indexers {
	return predicate.Indexers(sql.NotPredicates(p))
}
