// Code generated by ent, DO NOT EDIT.

package media

import (
	"polaris/ent/predicate"
	"time"

	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.Media {
	return predicate.Media(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.Media {
	return predicate.Media(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.Media {
	return predicate.Media(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.Media {
	return predicate.Media(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.Media {
	return predicate.Media(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.Media {
	return predicate.Media(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.Media {
	return predicate.Media(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.Media {
	return predicate.Media(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.Media {
	return predicate.Media(sql.FieldLTE(FieldID, id))
}

// TmdbID applies equality check predicate on the "tmdb_id" field. It's identical to TmdbIDEQ.
func TmdbID(v int) predicate.Media {
	return predicate.Media(sql.FieldEQ(FieldTmdbID, v))
}

// ImdbID applies equality check predicate on the "imdb_id" field. It's identical to ImdbIDEQ.
func ImdbID(v string) predicate.Media {
	return predicate.Media(sql.FieldEQ(FieldImdbID, v))
}

// NameCn applies equality check predicate on the "name_cn" field. It's identical to NameCnEQ.
func NameCn(v string) predicate.Media {
	return predicate.Media(sql.FieldEQ(FieldNameCn, v))
}

// NameEn applies equality check predicate on the "name_en" field. It's identical to NameEnEQ.
func NameEn(v string) predicate.Media {
	return predicate.Media(sql.FieldEQ(FieldNameEn, v))
}

// OriginalName applies equality check predicate on the "original_name" field. It's identical to OriginalNameEQ.
func OriginalName(v string) predicate.Media {
	return predicate.Media(sql.FieldEQ(FieldOriginalName, v))
}

// Overview applies equality check predicate on the "overview" field. It's identical to OverviewEQ.
func Overview(v string) predicate.Media {
	return predicate.Media(sql.FieldEQ(FieldOverview, v))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v time.Time) predicate.Media {
	return predicate.Media(sql.FieldEQ(FieldCreatedAt, v))
}

// AirDate applies equality check predicate on the "air_date" field. It's identical to AirDateEQ.
func AirDate(v string) predicate.Media {
	return predicate.Media(sql.FieldEQ(FieldAirDate, v))
}

// StorageID applies equality check predicate on the "storage_id" field. It's identical to StorageIDEQ.
func StorageID(v int) predicate.Media {
	return predicate.Media(sql.FieldEQ(FieldStorageID, v))
}

// TargetDir applies equality check predicate on the "target_dir" field. It's identical to TargetDirEQ.
func TargetDir(v string) predicate.Media {
	return predicate.Media(sql.FieldEQ(FieldTargetDir, v))
}

// DownloadHistoryEpisodes applies equality check predicate on the "download_history_episodes" field. It's identical to DownloadHistoryEpisodesEQ.
func DownloadHistoryEpisodes(v bool) predicate.Media {
	return predicate.Media(sql.FieldEQ(FieldDownloadHistoryEpisodes, v))
}

// CreateTime applies equality check predicate on the "create_time" field. It's identical to CreateTimeEQ.
func CreateTime(v time.Time) predicate.Media {
	return predicate.Media(sql.FieldEQ(FieldCreateTime, v))
}

// TmdbIDEQ applies the EQ predicate on the "tmdb_id" field.
func TmdbIDEQ(v int) predicate.Media {
	return predicate.Media(sql.FieldEQ(FieldTmdbID, v))
}

// TmdbIDNEQ applies the NEQ predicate on the "tmdb_id" field.
func TmdbIDNEQ(v int) predicate.Media {
	return predicate.Media(sql.FieldNEQ(FieldTmdbID, v))
}

// TmdbIDIn applies the In predicate on the "tmdb_id" field.
func TmdbIDIn(vs ...int) predicate.Media {
	return predicate.Media(sql.FieldIn(FieldTmdbID, vs...))
}

// TmdbIDNotIn applies the NotIn predicate on the "tmdb_id" field.
func TmdbIDNotIn(vs ...int) predicate.Media {
	return predicate.Media(sql.FieldNotIn(FieldTmdbID, vs...))
}

// TmdbIDGT applies the GT predicate on the "tmdb_id" field.
func TmdbIDGT(v int) predicate.Media {
	return predicate.Media(sql.FieldGT(FieldTmdbID, v))
}

// TmdbIDGTE applies the GTE predicate on the "tmdb_id" field.
func TmdbIDGTE(v int) predicate.Media {
	return predicate.Media(sql.FieldGTE(FieldTmdbID, v))
}

// TmdbIDLT applies the LT predicate on the "tmdb_id" field.
func TmdbIDLT(v int) predicate.Media {
	return predicate.Media(sql.FieldLT(FieldTmdbID, v))
}

// TmdbIDLTE applies the LTE predicate on the "tmdb_id" field.
func TmdbIDLTE(v int) predicate.Media {
	return predicate.Media(sql.FieldLTE(FieldTmdbID, v))
}

// ImdbIDEQ applies the EQ predicate on the "imdb_id" field.
func ImdbIDEQ(v string) predicate.Media {
	return predicate.Media(sql.FieldEQ(FieldImdbID, v))
}

// ImdbIDNEQ applies the NEQ predicate on the "imdb_id" field.
func ImdbIDNEQ(v string) predicate.Media {
	return predicate.Media(sql.FieldNEQ(FieldImdbID, v))
}

// ImdbIDIn applies the In predicate on the "imdb_id" field.
func ImdbIDIn(vs ...string) predicate.Media {
	return predicate.Media(sql.FieldIn(FieldImdbID, vs...))
}

// ImdbIDNotIn applies the NotIn predicate on the "imdb_id" field.
func ImdbIDNotIn(vs ...string) predicate.Media {
	return predicate.Media(sql.FieldNotIn(FieldImdbID, vs...))
}

// ImdbIDGT applies the GT predicate on the "imdb_id" field.
func ImdbIDGT(v string) predicate.Media {
	return predicate.Media(sql.FieldGT(FieldImdbID, v))
}

// ImdbIDGTE applies the GTE predicate on the "imdb_id" field.
func ImdbIDGTE(v string) predicate.Media {
	return predicate.Media(sql.FieldGTE(FieldImdbID, v))
}

// ImdbIDLT applies the LT predicate on the "imdb_id" field.
func ImdbIDLT(v string) predicate.Media {
	return predicate.Media(sql.FieldLT(FieldImdbID, v))
}

// ImdbIDLTE applies the LTE predicate on the "imdb_id" field.
func ImdbIDLTE(v string) predicate.Media {
	return predicate.Media(sql.FieldLTE(FieldImdbID, v))
}

// ImdbIDContains applies the Contains predicate on the "imdb_id" field.
func ImdbIDContains(v string) predicate.Media {
	return predicate.Media(sql.FieldContains(FieldImdbID, v))
}

// ImdbIDHasPrefix applies the HasPrefix predicate on the "imdb_id" field.
func ImdbIDHasPrefix(v string) predicate.Media {
	return predicate.Media(sql.FieldHasPrefix(FieldImdbID, v))
}

// ImdbIDHasSuffix applies the HasSuffix predicate on the "imdb_id" field.
func ImdbIDHasSuffix(v string) predicate.Media {
	return predicate.Media(sql.FieldHasSuffix(FieldImdbID, v))
}

// ImdbIDIsNil applies the IsNil predicate on the "imdb_id" field.
func ImdbIDIsNil() predicate.Media {
	return predicate.Media(sql.FieldIsNull(FieldImdbID))
}

// ImdbIDNotNil applies the NotNil predicate on the "imdb_id" field.
func ImdbIDNotNil() predicate.Media {
	return predicate.Media(sql.FieldNotNull(FieldImdbID))
}

// ImdbIDEqualFold applies the EqualFold predicate on the "imdb_id" field.
func ImdbIDEqualFold(v string) predicate.Media {
	return predicate.Media(sql.FieldEqualFold(FieldImdbID, v))
}

// ImdbIDContainsFold applies the ContainsFold predicate on the "imdb_id" field.
func ImdbIDContainsFold(v string) predicate.Media {
	return predicate.Media(sql.FieldContainsFold(FieldImdbID, v))
}

// MediaTypeEQ applies the EQ predicate on the "media_type" field.
func MediaTypeEQ(v MediaType) predicate.Media {
	return predicate.Media(sql.FieldEQ(FieldMediaType, v))
}

// MediaTypeNEQ applies the NEQ predicate on the "media_type" field.
func MediaTypeNEQ(v MediaType) predicate.Media {
	return predicate.Media(sql.FieldNEQ(FieldMediaType, v))
}

// MediaTypeIn applies the In predicate on the "media_type" field.
func MediaTypeIn(vs ...MediaType) predicate.Media {
	return predicate.Media(sql.FieldIn(FieldMediaType, vs...))
}

// MediaTypeNotIn applies the NotIn predicate on the "media_type" field.
func MediaTypeNotIn(vs ...MediaType) predicate.Media {
	return predicate.Media(sql.FieldNotIn(FieldMediaType, vs...))
}

// NameCnEQ applies the EQ predicate on the "name_cn" field.
func NameCnEQ(v string) predicate.Media {
	return predicate.Media(sql.FieldEQ(FieldNameCn, v))
}

// NameCnNEQ applies the NEQ predicate on the "name_cn" field.
func NameCnNEQ(v string) predicate.Media {
	return predicate.Media(sql.FieldNEQ(FieldNameCn, v))
}

// NameCnIn applies the In predicate on the "name_cn" field.
func NameCnIn(vs ...string) predicate.Media {
	return predicate.Media(sql.FieldIn(FieldNameCn, vs...))
}

// NameCnNotIn applies the NotIn predicate on the "name_cn" field.
func NameCnNotIn(vs ...string) predicate.Media {
	return predicate.Media(sql.FieldNotIn(FieldNameCn, vs...))
}

// NameCnGT applies the GT predicate on the "name_cn" field.
func NameCnGT(v string) predicate.Media {
	return predicate.Media(sql.FieldGT(FieldNameCn, v))
}

// NameCnGTE applies the GTE predicate on the "name_cn" field.
func NameCnGTE(v string) predicate.Media {
	return predicate.Media(sql.FieldGTE(FieldNameCn, v))
}

// NameCnLT applies the LT predicate on the "name_cn" field.
func NameCnLT(v string) predicate.Media {
	return predicate.Media(sql.FieldLT(FieldNameCn, v))
}

// NameCnLTE applies the LTE predicate on the "name_cn" field.
func NameCnLTE(v string) predicate.Media {
	return predicate.Media(sql.FieldLTE(FieldNameCn, v))
}

// NameCnContains applies the Contains predicate on the "name_cn" field.
func NameCnContains(v string) predicate.Media {
	return predicate.Media(sql.FieldContains(FieldNameCn, v))
}

// NameCnHasPrefix applies the HasPrefix predicate on the "name_cn" field.
func NameCnHasPrefix(v string) predicate.Media {
	return predicate.Media(sql.FieldHasPrefix(FieldNameCn, v))
}

// NameCnHasSuffix applies the HasSuffix predicate on the "name_cn" field.
func NameCnHasSuffix(v string) predicate.Media {
	return predicate.Media(sql.FieldHasSuffix(FieldNameCn, v))
}

// NameCnEqualFold applies the EqualFold predicate on the "name_cn" field.
func NameCnEqualFold(v string) predicate.Media {
	return predicate.Media(sql.FieldEqualFold(FieldNameCn, v))
}

// NameCnContainsFold applies the ContainsFold predicate on the "name_cn" field.
func NameCnContainsFold(v string) predicate.Media {
	return predicate.Media(sql.FieldContainsFold(FieldNameCn, v))
}

// NameEnEQ applies the EQ predicate on the "name_en" field.
func NameEnEQ(v string) predicate.Media {
	return predicate.Media(sql.FieldEQ(FieldNameEn, v))
}

// NameEnNEQ applies the NEQ predicate on the "name_en" field.
func NameEnNEQ(v string) predicate.Media {
	return predicate.Media(sql.FieldNEQ(FieldNameEn, v))
}

// NameEnIn applies the In predicate on the "name_en" field.
func NameEnIn(vs ...string) predicate.Media {
	return predicate.Media(sql.FieldIn(FieldNameEn, vs...))
}

// NameEnNotIn applies the NotIn predicate on the "name_en" field.
func NameEnNotIn(vs ...string) predicate.Media {
	return predicate.Media(sql.FieldNotIn(FieldNameEn, vs...))
}

// NameEnGT applies the GT predicate on the "name_en" field.
func NameEnGT(v string) predicate.Media {
	return predicate.Media(sql.FieldGT(FieldNameEn, v))
}

// NameEnGTE applies the GTE predicate on the "name_en" field.
func NameEnGTE(v string) predicate.Media {
	return predicate.Media(sql.FieldGTE(FieldNameEn, v))
}

// NameEnLT applies the LT predicate on the "name_en" field.
func NameEnLT(v string) predicate.Media {
	return predicate.Media(sql.FieldLT(FieldNameEn, v))
}

// NameEnLTE applies the LTE predicate on the "name_en" field.
func NameEnLTE(v string) predicate.Media {
	return predicate.Media(sql.FieldLTE(FieldNameEn, v))
}

// NameEnContains applies the Contains predicate on the "name_en" field.
func NameEnContains(v string) predicate.Media {
	return predicate.Media(sql.FieldContains(FieldNameEn, v))
}

// NameEnHasPrefix applies the HasPrefix predicate on the "name_en" field.
func NameEnHasPrefix(v string) predicate.Media {
	return predicate.Media(sql.FieldHasPrefix(FieldNameEn, v))
}

// NameEnHasSuffix applies the HasSuffix predicate on the "name_en" field.
func NameEnHasSuffix(v string) predicate.Media {
	return predicate.Media(sql.FieldHasSuffix(FieldNameEn, v))
}

// NameEnEqualFold applies the EqualFold predicate on the "name_en" field.
func NameEnEqualFold(v string) predicate.Media {
	return predicate.Media(sql.FieldEqualFold(FieldNameEn, v))
}

// NameEnContainsFold applies the ContainsFold predicate on the "name_en" field.
func NameEnContainsFold(v string) predicate.Media {
	return predicate.Media(sql.FieldContainsFold(FieldNameEn, v))
}

// OriginalNameEQ applies the EQ predicate on the "original_name" field.
func OriginalNameEQ(v string) predicate.Media {
	return predicate.Media(sql.FieldEQ(FieldOriginalName, v))
}

// OriginalNameNEQ applies the NEQ predicate on the "original_name" field.
func OriginalNameNEQ(v string) predicate.Media {
	return predicate.Media(sql.FieldNEQ(FieldOriginalName, v))
}

// OriginalNameIn applies the In predicate on the "original_name" field.
func OriginalNameIn(vs ...string) predicate.Media {
	return predicate.Media(sql.FieldIn(FieldOriginalName, vs...))
}

// OriginalNameNotIn applies the NotIn predicate on the "original_name" field.
func OriginalNameNotIn(vs ...string) predicate.Media {
	return predicate.Media(sql.FieldNotIn(FieldOriginalName, vs...))
}

// OriginalNameGT applies the GT predicate on the "original_name" field.
func OriginalNameGT(v string) predicate.Media {
	return predicate.Media(sql.FieldGT(FieldOriginalName, v))
}

// OriginalNameGTE applies the GTE predicate on the "original_name" field.
func OriginalNameGTE(v string) predicate.Media {
	return predicate.Media(sql.FieldGTE(FieldOriginalName, v))
}

// OriginalNameLT applies the LT predicate on the "original_name" field.
func OriginalNameLT(v string) predicate.Media {
	return predicate.Media(sql.FieldLT(FieldOriginalName, v))
}

// OriginalNameLTE applies the LTE predicate on the "original_name" field.
func OriginalNameLTE(v string) predicate.Media {
	return predicate.Media(sql.FieldLTE(FieldOriginalName, v))
}

// OriginalNameContains applies the Contains predicate on the "original_name" field.
func OriginalNameContains(v string) predicate.Media {
	return predicate.Media(sql.FieldContains(FieldOriginalName, v))
}

// OriginalNameHasPrefix applies the HasPrefix predicate on the "original_name" field.
func OriginalNameHasPrefix(v string) predicate.Media {
	return predicate.Media(sql.FieldHasPrefix(FieldOriginalName, v))
}

// OriginalNameHasSuffix applies the HasSuffix predicate on the "original_name" field.
func OriginalNameHasSuffix(v string) predicate.Media {
	return predicate.Media(sql.FieldHasSuffix(FieldOriginalName, v))
}

// OriginalNameEqualFold applies the EqualFold predicate on the "original_name" field.
func OriginalNameEqualFold(v string) predicate.Media {
	return predicate.Media(sql.FieldEqualFold(FieldOriginalName, v))
}

// OriginalNameContainsFold applies the ContainsFold predicate on the "original_name" field.
func OriginalNameContainsFold(v string) predicate.Media {
	return predicate.Media(sql.FieldContainsFold(FieldOriginalName, v))
}

// OverviewEQ applies the EQ predicate on the "overview" field.
func OverviewEQ(v string) predicate.Media {
	return predicate.Media(sql.FieldEQ(FieldOverview, v))
}

// OverviewNEQ applies the NEQ predicate on the "overview" field.
func OverviewNEQ(v string) predicate.Media {
	return predicate.Media(sql.FieldNEQ(FieldOverview, v))
}

// OverviewIn applies the In predicate on the "overview" field.
func OverviewIn(vs ...string) predicate.Media {
	return predicate.Media(sql.FieldIn(FieldOverview, vs...))
}

// OverviewNotIn applies the NotIn predicate on the "overview" field.
func OverviewNotIn(vs ...string) predicate.Media {
	return predicate.Media(sql.FieldNotIn(FieldOverview, vs...))
}

// OverviewGT applies the GT predicate on the "overview" field.
func OverviewGT(v string) predicate.Media {
	return predicate.Media(sql.FieldGT(FieldOverview, v))
}

// OverviewGTE applies the GTE predicate on the "overview" field.
func OverviewGTE(v string) predicate.Media {
	return predicate.Media(sql.FieldGTE(FieldOverview, v))
}

// OverviewLT applies the LT predicate on the "overview" field.
func OverviewLT(v string) predicate.Media {
	return predicate.Media(sql.FieldLT(FieldOverview, v))
}

// OverviewLTE applies the LTE predicate on the "overview" field.
func OverviewLTE(v string) predicate.Media {
	return predicate.Media(sql.FieldLTE(FieldOverview, v))
}

// OverviewContains applies the Contains predicate on the "overview" field.
func OverviewContains(v string) predicate.Media {
	return predicate.Media(sql.FieldContains(FieldOverview, v))
}

// OverviewHasPrefix applies the HasPrefix predicate on the "overview" field.
func OverviewHasPrefix(v string) predicate.Media {
	return predicate.Media(sql.FieldHasPrefix(FieldOverview, v))
}

// OverviewHasSuffix applies the HasSuffix predicate on the "overview" field.
func OverviewHasSuffix(v string) predicate.Media {
	return predicate.Media(sql.FieldHasSuffix(FieldOverview, v))
}

// OverviewEqualFold applies the EqualFold predicate on the "overview" field.
func OverviewEqualFold(v string) predicate.Media {
	return predicate.Media(sql.FieldEqualFold(FieldOverview, v))
}

// OverviewContainsFold applies the ContainsFold predicate on the "overview" field.
func OverviewContainsFold(v string) predicate.Media {
	return predicate.Media(sql.FieldContainsFold(FieldOverview, v))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v time.Time) predicate.Media {
	return predicate.Media(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v time.Time) predicate.Media {
	return predicate.Media(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...time.Time) predicate.Media {
	return predicate.Media(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...time.Time) predicate.Media {
	return predicate.Media(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v time.Time) predicate.Media {
	return predicate.Media(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v time.Time) predicate.Media {
	return predicate.Media(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v time.Time) predicate.Media {
	return predicate.Media(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v time.Time) predicate.Media {
	return predicate.Media(sql.FieldLTE(FieldCreatedAt, v))
}

// AirDateEQ applies the EQ predicate on the "air_date" field.
func AirDateEQ(v string) predicate.Media {
	return predicate.Media(sql.FieldEQ(FieldAirDate, v))
}

// AirDateNEQ applies the NEQ predicate on the "air_date" field.
func AirDateNEQ(v string) predicate.Media {
	return predicate.Media(sql.FieldNEQ(FieldAirDate, v))
}

// AirDateIn applies the In predicate on the "air_date" field.
func AirDateIn(vs ...string) predicate.Media {
	return predicate.Media(sql.FieldIn(FieldAirDate, vs...))
}

// AirDateNotIn applies the NotIn predicate on the "air_date" field.
func AirDateNotIn(vs ...string) predicate.Media {
	return predicate.Media(sql.FieldNotIn(FieldAirDate, vs...))
}

// AirDateGT applies the GT predicate on the "air_date" field.
func AirDateGT(v string) predicate.Media {
	return predicate.Media(sql.FieldGT(FieldAirDate, v))
}

// AirDateGTE applies the GTE predicate on the "air_date" field.
func AirDateGTE(v string) predicate.Media {
	return predicate.Media(sql.FieldGTE(FieldAirDate, v))
}

// AirDateLT applies the LT predicate on the "air_date" field.
func AirDateLT(v string) predicate.Media {
	return predicate.Media(sql.FieldLT(FieldAirDate, v))
}

// AirDateLTE applies the LTE predicate on the "air_date" field.
func AirDateLTE(v string) predicate.Media {
	return predicate.Media(sql.FieldLTE(FieldAirDate, v))
}

// AirDateContains applies the Contains predicate on the "air_date" field.
func AirDateContains(v string) predicate.Media {
	return predicate.Media(sql.FieldContains(FieldAirDate, v))
}

// AirDateHasPrefix applies the HasPrefix predicate on the "air_date" field.
func AirDateHasPrefix(v string) predicate.Media {
	return predicate.Media(sql.FieldHasPrefix(FieldAirDate, v))
}

// AirDateHasSuffix applies the HasSuffix predicate on the "air_date" field.
func AirDateHasSuffix(v string) predicate.Media {
	return predicate.Media(sql.FieldHasSuffix(FieldAirDate, v))
}

// AirDateEqualFold applies the EqualFold predicate on the "air_date" field.
func AirDateEqualFold(v string) predicate.Media {
	return predicate.Media(sql.FieldEqualFold(FieldAirDate, v))
}

// AirDateContainsFold applies the ContainsFold predicate on the "air_date" field.
func AirDateContainsFold(v string) predicate.Media {
	return predicate.Media(sql.FieldContainsFold(FieldAirDate, v))
}

// ResolutionEQ applies the EQ predicate on the "resolution" field.
func ResolutionEQ(v Resolution) predicate.Media {
	return predicate.Media(sql.FieldEQ(FieldResolution, v))
}

// ResolutionNEQ applies the NEQ predicate on the "resolution" field.
func ResolutionNEQ(v Resolution) predicate.Media {
	return predicate.Media(sql.FieldNEQ(FieldResolution, v))
}

// ResolutionIn applies the In predicate on the "resolution" field.
func ResolutionIn(vs ...Resolution) predicate.Media {
	return predicate.Media(sql.FieldIn(FieldResolution, vs...))
}

// ResolutionNotIn applies the NotIn predicate on the "resolution" field.
func ResolutionNotIn(vs ...Resolution) predicate.Media {
	return predicate.Media(sql.FieldNotIn(FieldResolution, vs...))
}

// StorageIDEQ applies the EQ predicate on the "storage_id" field.
func StorageIDEQ(v int) predicate.Media {
	return predicate.Media(sql.FieldEQ(FieldStorageID, v))
}

// StorageIDNEQ applies the NEQ predicate on the "storage_id" field.
func StorageIDNEQ(v int) predicate.Media {
	return predicate.Media(sql.FieldNEQ(FieldStorageID, v))
}

// StorageIDIn applies the In predicate on the "storage_id" field.
func StorageIDIn(vs ...int) predicate.Media {
	return predicate.Media(sql.FieldIn(FieldStorageID, vs...))
}

// StorageIDNotIn applies the NotIn predicate on the "storage_id" field.
func StorageIDNotIn(vs ...int) predicate.Media {
	return predicate.Media(sql.FieldNotIn(FieldStorageID, vs...))
}

// StorageIDGT applies the GT predicate on the "storage_id" field.
func StorageIDGT(v int) predicate.Media {
	return predicate.Media(sql.FieldGT(FieldStorageID, v))
}

// StorageIDGTE applies the GTE predicate on the "storage_id" field.
func StorageIDGTE(v int) predicate.Media {
	return predicate.Media(sql.FieldGTE(FieldStorageID, v))
}

// StorageIDLT applies the LT predicate on the "storage_id" field.
func StorageIDLT(v int) predicate.Media {
	return predicate.Media(sql.FieldLT(FieldStorageID, v))
}

// StorageIDLTE applies the LTE predicate on the "storage_id" field.
func StorageIDLTE(v int) predicate.Media {
	return predicate.Media(sql.FieldLTE(FieldStorageID, v))
}

// StorageIDIsNil applies the IsNil predicate on the "storage_id" field.
func StorageIDIsNil() predicate.Media {
	return predicate.Media(sql.FieldIsNull(FieldStorageID))
}

// StorageIDNotNil applies the NotNil predicate on the "storage_id" field.
func StorageIDNotNil() predicate.Media {
	return predicate.Media(sql.FieldNotNull(FieldStorageID))
}

// TargetDirEQ applies the EQ predicate on the "target_dir" field.
func TargetDirEQ(v string) predicate.Media {
	return predicate.Media(sql.FieldEQ(FieldTargetDir, v))
}

// TargetDirNEQ applies the NEQ predicate on the "target_dir" field.
func TargetDirNEQ(v string) predicate.Media {
	return predicate.Media(sql.FieldNEQ(FieldTargetDir, v))
}

// TargetDirIn applies the In predicate on the "target_dir" field.
func TargetDirIn(vs ...string) predicate.Media {
	return predicate.Media(sql.FieldIn(FieldTargetDir, vs...))
}

// TargetDirNotIn applies the NotIn predicate on the "target_dir" field.
func TargetDirNotIn(vs ...string) predicate.Media {
	return predicate.Media(sql.FieldNotIn(FieldTargetDir, vs...))
}

// TargetDirGT applies the GT predicate on the "target_dir" field.
func TargetDirGT(v string) predicate.Media {
	return predicate.Media(sql.FieldGT(FieldTargetDir, v))
}

// TargetDirGTE applies the GTE predicate on the "target_dir" field.
func TargetDirGTE(v string) predicate.Media {
	return predicate.Media(sql.FieldGTE(FieldTargetDir, v))
}

// TargetDirLT applies the LT predicate on the "target_dir" field.
func TargetDirLT(v string) predicate.Media {
	return predicate.Media(sql.FieldLT(FieldTargetDir, v))
}

// TargetDirLTE applies the LTE predicate on the "target_dir" field.
func TargetDirLTE(v string) predicate.Media {
	return predicate.Media(sql.FieldLTE(FieldTargetDir, v))
}

// TargetDirContains applies the Contains predicate on the "target_dir" field.
func TargetDirContains(v string) predicate.Media {
	return predicate.Media(sql.FieldContains(FieldTargetDir, v))
}

// TargetDirHasPrefix applies the HasPrefix predicate on the "target_dir" field.
func TargetDirHasPrefix(v string) predicate.Media {
	return predicate.Media(sql.FieldHasPrefix(FieldTargetDir, v))
}

// TargetDirHasSuffix applies the HasSuffix predicate on the "target_dir" field.
func TargetDirHasSuffix(v string) predicate.Media {
	return predicate.Media(sql.FieldHasSuffix(FieldTargetDir, v))
}

// TargetDirIsNil applies the IsNil predicate on the "target_dir" field.
func TargetDirIsNil() predicate.Media {
	return predicate.Media(sql.FieldIsNull(FieldTargetDir))
}

// TargetDirNotNil applies the NotNil predicate on the "target_dir" field.
func TargetDirNotNil() predicate.Media {
	return predicate.Media(sql.FieldNotNull(FieldTargetDir))
}

// TargetDirEqualFold applies the EqualFold predicate on the "target_dir" field.
func TargetDirEqualFold(v string) predicate.Media {
	return predicate.Media(sql.FieldEqualFold(FieldTargetDir, v))
}

// TargetDirContainsFold applies the ContainsFold predicate on the "target_dir" field.
func TargetDirContainsFold(v string) predicate.Media {
	return predicate.Media(sql.FieldContainsFold(FieldTargetDir, v))
}

// DownloadHistoryEpisodesEQ applies the EQ predicate on the "download_history_episodes" field.
func DownloadHistoryEpisodesEQ(v bool) predicate.Media {
	return predicate.Media(sql.FieldEQ(FieldDownloadHistoryEpisodes, v))
}

// DownloadHistoryEpisodesNEQ applies the NEQ predicate on the "download_history_episodes" field.
func DownloadHistoryEpisodesNEQ(v bool) predicate.Media {
	return predicate.Media(sql.FieldNEQ(FieldDownloadHistoryEpisodes, v))
}

// DownloadHistoryEpisodesIsNil applies the IsNil predicate on the "download_history_episodes" field.
func DownloadHistoryEpisodesIsNil() predicate.Media {
	return predicate.Media(sql.FieldIsNull(FieldDownloadHistoryEpisodes))
}

// DownloadHistoryEpisodesNotNil applies the NotNil predicate on the "download_history_episodes" field.
func DownloadHistoryEpisodesNotNil() predicate.Media {
	return predicate.Media(sql.FieldNotNull(FieldDownloadHistoryEpisodes))
}

// LimiterIsNil applies the IsNil predicate on the "limiter" field.
func LimiterIsNil() predicate.Media {
	return predicate.Media(sql.FieldIsNull(FieldLimiter))
}

// LimiterNotNil applies the NotNil predicate on the "limiter" field.
func LimiterNotNil() predicate.Media {
	return predicate.Media(sql.FieldNotNull(FieldLimiter))
}

// ExtrasIsNil applies the IsNil predicate on the "extras" field.
func ExtrasIsNil() predicate.Media {
	return predicate.Media(sql.FieldIsNull(FieldExtras))
}

// ExtrasNotNil applies the NotNil predicate on the "extras" field.
func ExtrasNotNil() predicate.Media {
	return predicate.Media(sql.FieldNotNull(FieldExtras))
}

// AlternativeTitlesIsNil applies the IsNil predicate on the "alternative_titles" field.
func AlternativeTitlesIsNil() predicate.Media {
	return predicate.Media(sql.FieldIsNull(FieldAlternativeTitles))
}

// AlternativeTitlesNotNil applies the NotNil predicate on the "alternative_titles" field.
func AlternativeTitlesNotNil() predicate.Media {
	return predicate.Media(sql.FieldNotNull(FieldAlternativeTitles))
}

// CreateTimeEQ applies the EQ predicate on the "create_time" field.
func CreateTimeEQ(v time.Time) predicate.Media {
	return predicate.Media(sql.FieldEQ(FieldCreateTime, v))
}

// CreateTimeNEQ applies the NEQ predicate on the "create_time" field.
func CreateTimeNEQ(v time.Time) predicate.Media {
	return predicate.Media(sql.FieldNEQ(FieldCreateTime, v))
}

// CreateTimeIn applies the In predicate on the "create_time" field.
func CreateTimeIn(vs ...time.Time) predicate.Media {
	return predicate.Media(sql.FieldIn(FieldCreateTime, vs...))
}

// CreateTimeNotIn applies the NotIn predicate on the "create_time" field.
func CreateTimeNotIn(vs ...time.Time) predicate.Media {
	return predicate.Media(sql.FieldNotIn(FieldCreateTime, vs...))
}

// CreateTimeGT applies the GT predicate on the "create_time" field.
func CreateTimeGT(v time.Time) predicate.Media {
	return predicate.Media(sql.FieldGT(FieldCreateTime, v))
}

// CreateTimeGTE applies the GTE predicate on the "create_time" field.
func CreateTimeGTE(v time.Time) predicate.Media {
	return predicate.Media(sql.FieldGTE(FieldCreateTime, v))
}

// CreateTimeLT applies the LT predicate on the "create_time" field.
func CreateTimeLT(v time.Time) predicate.Media {
	return predicate.Media(sql.FieldLT(FieldCreateTime, v))
}

// CreateTimeLTE applies the LTE predicate on the "create_time" field.
func CreateTimeLTE(v time.Time) predicate.Media {
	return predicate.Media(sql.FieldLTE(FieldCreateTime, v))
}

// CreateTimeIsNil applies the IsNil predicate on the "create_time" field.
func CreateTimeIsNil() predicate.Media {
	return predicate.Media(sql.FieldIsNull(FieldCreateTime))
}

// CreateTimeNotNil applies the NotNil predicate on the "create_time" field.
func CreateTimeNotNil() predicate.Media {
	return predicate.Media(sql.FieldNotNull(FieldCreateTime))
}

// HasEpisodes applies the HasEdge predicate on the "episodes" edge.
func HasEpisodes() predicate.Media {
	return predicate.Media(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.O2M, false, EpisodesTable, EpisodesColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasEpisodesWith applies the HasEdge predicate on the "episodes" edge with a given conditions (other predicates).
func HasEpisodesWith(preds ...predicate.Episode) predicate.Media {
	return predicate.Media(func(s *sql.Selector) {
		step := newEpisodesStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.Media) predicate.Media {
	return predicate.Media(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.Media) predicate.Media {
	return predicate.Media(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.Media) predicate.Media {
	return predicate.Media(sql.NotPredicates(p))
}
